groups: []

resources:
- name: elastic-runtime
  type: pivnet
  check_every: 1h
  source:
    api_token: {{pivnet_api_token}}
    product_slug: elastic-runtime
    product_version: {{ert-version-regex}}
- name: concourse-deploy-cloudfoundry
  type: git
  check_every: 1h
  source:
    uri: https://github.com/enaml-ops/concourse-deploy-cloudfoundry
    branch: master
- name: omg-cli
  type: github-release
  check_every: 1h
  source:
    user: enaml-ops
    repository: omg-cli
- name: omg-cli-product-bundle
  type: github-release
  check_every: 1h
  source:
    user: enaml-ops
    repository: omg-product-bundle
- name: {{deployment-name}}
  type: bosh-deployment
  check_every: 1h
  source:
    ca_cert: {{bosh-cacert}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}
    deployment: cf
    target: {{bosh-target}}
- name: stemcells
  type: pivnet
  source:
    api_token: {{pivnet_api_token}}
    product_slug: stemcells
    product_version: {{stemcell-version-regex}}

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

jobs:
- name: deploy
  plan:
    - get: concourse-deploy-cloudfoundry
    - get: omg-cli
    - get: omg-cli-product-bundle
      trigger: true
      params:
        globs:
        - cloudfoundry-plugin-*
    - get: elastic-runtime
      params:
        globs:
        - cf-*
    - get: stemcells
      params:
        globs:
        - {{stemcell-cpi-glob}}
    - task: get-versions
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/get-versions-from-plugin.sh
        params:
          CLOUD_CONFIG_PLUGIN: {{cloud_config_plugin}}
          PRODUCT: elastic-runtime
          PRODUCT_PLUGIN: {{product_plugin}}
          VERSION: latest
          OUTPUT_DIR: versions
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: omg-cli
        - name: omg-cli-product-bundle
        outputs:
        - name: versions
          path: ""
    - task: generate-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/generate-pcf-manifest.sh
        params:
          BOSH_CLIENT: {{bosh-user}}
          BOSH_CLIENT_SECRET: {{bosh-pass}}
          BOSH_CACERT: {{bosh-cacert}}
          CLOUD_CONFIG_PLUGIN: {{cloud_config_plugin}}
          PRODUCT_PLUGIN: {{product_plugin}}
          SKIP_HAPROXY: {{skip-haproxy}}
          VAULT_ADDR: {{vault_addr}}
          VAULT_HASH_IP: {{vault_hash_ip}}
          VAULT_HASH_HOSTVARS: {{vault_hash_hostvars}}
          VAULT_HASH_KEYCERT: {{vault_hash_keycert}}
          VAULT_HASH_PASSWORD: {{vault_hash_password}}
          VAULT_TOKEN: {{vault_token}}
          OUTPUT_DIR: manifest
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: omg-cli
        - name: omg-cli-product-bundle
        - name: stemcells
        - name: versions
        outputs:
        - name: manifest
          path: ""
    - task: extract-tile
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/extract-tile.sh
        params:
          PRODUCT_DIR: elastic-runtime
          OUTPUT_DIR: elastic-runtime-extracted
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: elastic-runtime
        outputs:
        - name: elastic-runtime-extracted
          path: ""
    - put: {{deployment-name}}
      params:
        manifest: manifest/deployment.yml
        stemcells:
        - stemcells/bosh-stemcell*.tgz
        releases:
        - elastic-runtime-extracted/releases/*.tgz
- name: smoke-tests
  plan:
    - get: {{deployment-name}}
      passed: [deploy]
      trigger: true
    - task: smoke-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: smoke-tests
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: acceptance-tests
  plan:
    - get: {{deployment-name}}
      passed: [smoke-tests]
      trigger: true
    - task: acceptance-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: acceptance-tests
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: push-apps-manager
  plan:
    - get: {{deployment-name}}
      passed: [acceptance-tests]
      trigger: true
    - task: push-apps-manager
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: push-apps-manager
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: notifications
  plan:
    - get: {{deployment-name}}
      passed: [push-apps-manager]
      trigger: true
    - task: notifications
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: notifications
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: notifications-ui
  plan:
    - get: {{deployment-name}}
      passed: [notifications]
      trigger: true
    - task: notifications-ui
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: notifications-ui
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: autoscaling
  plan:
    - get: {{deployment-name}}
      passed: [push-apps-manager]
      trigger: true
    - task: autoscaling
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: autoscaling
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: autoscaling-register-broker
  plan:
    - get: {{deployment-name}}
      passed: [autoscaling]
      trigger: true
    - task: autoscaling-register-broker
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT_ID: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: autoscaling-register-broker
          BOSH_TARGET: {{bosh-target}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
